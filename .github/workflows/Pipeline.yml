name: CI CD
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  Build_server:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
      - name: Verify PHP Syntax
        run: |
          for file in $(find . -name "*.php"); do
            php -l $file;
          done
      - name: Validate HTML
        run: |
          sudo apt-get install -y tidy
          for file in $(find . -name "*.html"); do
            tidy -e $file;
          done
          
  Testing_server:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: Build_server
    services:
      mysql:
        image: 'mysql:8.0'
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: swe40006
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s
          --health-timeout=5s --health-retries=3
        ports:
          - '3306:3306'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: 'mbstring, pdo, pdo_mysql, mysqli'
      - name: Validate composer.json and composer.lock
        run: composer validate --strict
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Remove vendor directory
        run: rm -rf vendor
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress -vvv
      - name: Dump autoload
        run: composer dump-autoload
      - name: List vendor directory
        run: ls -la vendor/phpunit/phpunit/src/
      - name: Run PHPUnit tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: swe40006
          DB_USERNAME: root
          DB_PASSWORD: password
        run: |
          vendor/bin/phpunit --testdox --debug tests/ProcessTest.php
          vendor/bin/phpunit --testdox --debug tests/GetAnnouncementsTest.php
          vendor/bin/phpunit --testdox --debug tests/TeacherTest.php

  Production_server:
    runs-on: ubuntu-latest
    needs: Testing_server
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@3.27.181.69 'bash -s' < deploy_script.sh
